generator client {
  provider = "prisma-client-js"
  output   = "../../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int      @id @default(autoincrement())
  password      String
  firstName     String
  lastName      String
  occupation    String?
  companyName   String?
  email         String   @unique
  salary        Int?
  unitBalance   Int      @default(0)
  totalUsed     Int      @default(0)
  total         Int      @default(0)
  idNo          String?
  phone         String?
  address       String?
  image         String   @default("placeholder.jpg")
  type          String   @default("user")
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("admin")
  lastChangedBy String?
}

model transactions {
  id            Int      @id @default(autoincrement())
  amount        Float
  description   String
  mode          String
  unitValue     Int
  date          DateTime
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("admin")
  lastChangedBy String?
}

model contacts {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  phone         String?
  phoneTwo      String?
  email         String?
  emailTwo      String?
  address       String?
  image         String          @default("placeholder.jpg")
  status        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     String          @default("admin")
  lastChangedBy String?
  contactGroups contactGroups[]
}

model groups {
  id            Int             @id @default(autoincrement())
  name          String
  status        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     String          @default("admin")
  lastChangedBy String?
  contactGroups contactGroups[]

  @@unique([name])
}

model contactGroups {
  id            Int      @id @default(autoincrement())
  contact       contacts @relation(fields: [contactId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contactId     Int
  group         groups   @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  groupId       Int
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String   @default("admin")
  lastChangedBy String?
}
